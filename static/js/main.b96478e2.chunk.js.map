{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","role","placeholder","class","onClick","toggleMode","htm","lfor","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","Fragment","style","color","heading","htmlFor","value","onChange","event","target","rows","backgroundColor","newText","toUpperCase","showAlert","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","fontFamily","split","filter","element","length","newText2","ans","parseInt","countchar","Alert","height","alert","word","lower","charAt","slice","capital","msg","App","setmode","_useState3","_useState4","setalert","message","setTimeout","about","body","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.b96478e2.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n  <div className=\"container-fluid\">\r\n    <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n        </li>\r\n        {/* <li className=\"nav-item\">\r\n          <a className=\"nav-link\" href=\"#\">{props.about}</a>\r\n        </li> */}\r\n       \r\n      </ul>\r\n      <form className=\"d-flex mx-2\" role=\"search\">\r\n        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n        <button className=\"btn btn-outline-primary\" type=\"submit\">Search</button>\r\n      </form>\r\n      <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n  <input class=\"form-check-input\" type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\" onClick={props.toggleMode}/>\r\n  <label className=\"form-check-label\" htm lfor=\"flexSwitchCheckDefault\">Change Mode</label>\r\n</div>\r\n    </div>\r\n  </div>\r\n</nav>\r\n  )\r\n}\r\nNavbar.propTypes = {title:PropTypes.string.isRequired,\r\n                      about:PropTypes.string,};\r\n\r\n/*Navbar.defaultProps ={\r\n    title:'Set title here',\r\n    about:'About text here'\r\n\r\n};*/","import React,{useState} from 'react'\r\n\r\nexport default function TextForm(props){\r\n    const handleUpClick = ()=>{\r\n      //  console.log(\"Uppercase was clicked\");\r\n        let newText = text.toUpperCase();\r\n      //  newText.setProperty('--red','yellow');\r\n            setText(newText);\r\n            props.showAlert(\"Uppercase converted\",\"success\");\r\n    }\r\n    const handleloClick = ()=>{\r\n      //  console.log(\"Uppercase was clicked\");\r\n        let newText = text.toLowerCase();\r\n      //  newText.setProperty('--red','yellow');\r\n            setText(newText);\r\n            props.showAlert(\"LowerCase converted\",\"success\");\r\n        \r\n    }\r\n    const handleOnChange = (event)=>{\r\n      \r\n      //  console.log(\"On change\");\r\n         setText(event.target.value);\r\n\r\n    }\r\n    function countchar(text)\r\n    {\r\n      let newText2 = text.split(/\\s/).length-1;\r\n\r\n      let ans = text.length-newText2;\r\n      return parseInt(ans);\r\n    }\r\n    const handleCopy = ()=>{\r\n      \r\n        var text = document.getElementById(\"myBox\");\r\n        text.select();\r\n       navigator.clipboard.writeText(text.value);\r\n       props.showAlert(\"Text Copied\",\"success\");\r\n    }\r\n    const handleStyle = ()=>{\r\n     \r\n      var text = document.getElementById(\"myBox\");\r\n       if(text.style.color==='red'){\r\n       text.style.fontFamily='cursive';\r\n       text.style.color ='yellow';\r\n       }else{\r\n        text.style.fontFamily='serif';\r\n        text.style.color ='red';\r\n       }\r\n       props.showAlert(\"Style Changed\",\"success\");\r\n    }\r\n\r\n\r\n    const[text,setText] = useState('Enter text here');\r\n  return (\r\n    <>\r\n   <div className=\"container\" style ={{color : props.mode==='dark'?'white':'black'}}>\r\n   <h1>{props.heading}</h1>\r\n   <div className=\"mb-3\">\r\n  <label htmlFor=\"myBox\" className=\"form-label\"></label>\r\n  <textarea className=\"form-control\" id =\"myBox\"value={text} onChange={handleOnChange}  rows=\"8\" style ={{backgroundColor : props.mode==='dark'?'#13466e':'white'}}></textarea>\r\n </div>\r\n   <button className=\"btn btn-danger mx-2 my-2\" onClick={handleUpClick}>Covert to uppercase</button>\r\n   <button className=\"btn btn-danger mx-2 my-1\" onClick={handleloClick}>Covert to lowercasecase</button>\r\n   \r\n   <button className=\"btn btn-danger mx-2 my-1\" onClick={handleCopy}>Copy Text</button>\r\n   \r\n   <button className=\"btn btn-danger mx-2 my-1\" onClick={handleStyle}>Change Style</button>\r\n</div>\r\n<div className=\"container my-3\" style ={{color : props.mode==='dark'?'white':'black'}}>\r\n  <h1>Your text summary</h1>\r\n  <p>{text.split(/\\s+/).filter((element)=>{return element.length!==0}).length} words,{countchar(text)} chars</p>\r\n  <p>{.0083*text.split(\" \").filter((element)=>{return element.length!==0}).length} Minutes to read, {.0083*text.split(\" \").filter((element)=>{return element.length!==0}).length*60} seconds to read</p>\r\n  <h3>Preview</h3>\r\n  <p>{text}</p>\r\n</div>\r\n  </>\r\n   ) \r\n} \r\n\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n\r\n        const capital =(word)=>{\r\n            const lower = word.toLowerCase();\r\n            return lower.charAt(0).toUpperCase()+lower.slice(1);\r\n        }\r\n      return (\r\n        <div style ={{height : '50px'}}>\r\n      { props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n       <strong> {capital(props.alert.type)} </strong> : {props.alert.msg} \r\n       </div>\r\n      }\r\n    </div>  \r\n      )\r\n    \r\n}\r\n","import React, { useState }  from 'react';\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport Alert from './components/Alert';\n\n\n function App() {\n  const[mode,setmode] = useState('light');\n  const[alert,setalert] = useState(null);\n  const showAlert =(message,type)=>{\n    setalert({\n      msg : message,\n      type : type\n    })\n    setTimeout(()=>{\n      setalert(null);\n    },1500);\n  }\n  \n  const toggleMode =()=>{\n     if(mode ==='light'){\n       setmode('dark');\n       document.body.style.backgroundColor = 'grey';\n       showAlert(\"Dark mode enabled\",\"success\");\n      \n     }else{\n      setmode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light mode enabled\",\"success\");\n     }\n  }\n  return (\n  <>\n\n  <Navbar title = \"Textutils\" about= \"about\" mode ={mode} toggleMode={toggleMode} />\n  <Alert alert = {alert}/>\n  <div className=\"container my-3\">\n \n <TextForm heading =\"Enter the text \"mode ={mode} showAlert={showAlert}/>\n         \n          \n      \n  </div>\n\n  \n</>\n  \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\n\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}